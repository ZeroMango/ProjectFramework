(function () { window.common = {}; window.config = { postTimeOut: 10000, maskmsg: null, ajaxPostContext: null, alertDivHTMLString: "<div class='alert_box' style='position:fixed;z-index:1500;width:100%;opacity:1;height:100%;left:0;top:0px;background-color:rgba(68,68,68,0.4);transition:all 0.3s linear'><div class='content' style='width:260px;text-align:center;position:absolute;font-size:14px;left:50%;top:50%; transform:translateY(-50%) translateX(-50%);-webkit-transform:translateY(-50%) translateX(-50%);background-color:#fff;border-radius:10px'><P style='padding:20px 15px; line-height:25px; color:#333;font-size:16px'>{0}<P><div><div>" }; window.$_c4 = { encodeParam: function (jsonObj) { if (!jsonObj) { return jsonObj } if (jsonObj instanceof String) { return encodeURIComponent(jsonObj) } else { return encodeURIComponent(JSON.stringify(jsonObj)) } }, show: function (msg) { var h = $(document).height(); window.config.maskmsg = $('<div style="height:100%;width:100%;position:fixed;z-index:99999;background: rgba(255,255,255,0.8);left:0px;top:0px;">' + '<div style="position:absolute;overflow:hidden;left:50%;top:50%;margin-left:-34px;margin-top:-34px;height:68px;width:68px;text-align:center;">' + '<span class="circles-loader"></span>' + "</div>" + "</div>"); if (msg) { window.config.maskmsg.find("div").text(msg) } window.config.maskmsg.appendTo("body"); setTimeout((function (maskmsg) { return function () { maskmsg.remove() } })(window.config.maskmsg), window.config.postTimeOut) }, hide: function () { if (window.config.maskmsg !== null) { window.config.maskmsg.remove(); window.config.maskmsg = null } } }; $.fn.serializeObject = function () { var o = {}; var a = this.serializeArray(); $.each(a, function () { if (o[this.name] !== undefined) { if (!o[this.name].push) { o[this.name] = [o[this.name]] } o[this.name].push(this.value || "") } else { o[this.name] = this.value || "" } }); return o }; window.alert = function AlertWindow(msg, fn, duration) { duration = isNaN(duration) ? 2000 : duration; if ($(".alert_box").length) { $(".alert_box .content p:first").text(msg).parents(".alert_box").css({ "opacity": "1", "width": "100%", "height": "100%" }) } else { var win = $(window.config.alertDivHTMLString.format(msg)); $("body").append(win) } setTimeout(function () { var d = 0.7; $(".alert_box")[0].style.webkitTransition = "-webkit-transform " + d + "s ease-in, opacity " + d + "s ease-in"; $(".alert_box")[0].style.opacity = "0"; if (fn) { fn() } setTimeout(function () { $(".alert_box").remove() }, d * 1000) }, 2000) }; window.common.post = function post(url, data, onSuccess, unSucess, modal, async, onError, onComplete, dataType) { modal = (modal == false ? false : true); if (modal) { window.$_c4.show() } var jsonData = window.$_c4.encodeParam({ data: data }); var ajaxHandler = $.ajax.call(window.config.ajaxPostContext, { type: "post", url: url, cache: false, contentType: "application/x-www-form-urlencoded", dataType: (dataType ? dataType : "text"), data: jsonData, async: (async == false ? async : true), success: function (json) { try { if (modal) { window.$_c4.hide() } var result = JSON.parse(json || null); result.Data = JSON.parse(result.Data || null); if (result.Succeeded) { onSuccess(result) } if (!result.Succeeded && unSucess) { unSucess(result) } } catch (e) { alert(e.message) } }, error: onError ? onError : function () { ajaxHandler.abort(); if (modal) { window.$_c4.hide() } }, complete: function (XMLHttpRequest, status) { if (status === "timeout") { alert("访问超时"); ajaxHandler.abort(); if (modal) { window.$_c4.hide() } } } }) }; Date.prototype.Format = function (fmt) { var o = { "M+": this.getMonth() + 1, "d+": this.getDate(), "h+": this.getHours(), "m+": this.getMinutes(), "s+": this.getSeconds(), "q+": Math.floor((this.getMonth() + 3) / 3), "S": this.getMilliseconds() }; for (var time in o) { if (isNaN(o[time])) { return "" } } if (/(y+)/.test(fmt)) { fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length)) } for (var k in o) { if (new RegExp("(" + k + ")").test(fmt)) { fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length))) } } return fmt }; $.confirm = function (msg, okOptopn, canclOption, callback) { var divBackground = document.createElement("div"); divBackground.style.cssText = "position:fixed;top: 0;left:0;width: 100%;height: 100%;background: rgba(0,0,0,0.5);z-index:9999999999"; var divContent = document.createElement("div"); divContent.style.cssText = "width: 72%;background: #ffffff;border-radius: 8px;margin:70% auto;position: relative;text-align: center;overflow:hidden;font-size:14px;"; var span = document.createElement("span"); span.innerHTML = msg; span.style.cssText = "margin: 20px;display:block;"; var ul = document.createElement("ul"); ul.style.cssText = "margin-top:10px;border-top: 1px solid #dcdcdc;"; var li1 = document.createElement("li"); li1.style.cssText = "text-align: center;line-height: 40px;float:left;width:50%;border-right: 1px solid gainsboro;margin-left:-1px;font-size:12px;color:red;"; li1.innerHTML = "取消"; if (canclOption && canclOption.text) { li1.innerHTML = canclOption.text } li1.onclick = function () { if (canclOption.fn) { canclOption.fn() } document.body.removeChild(divBackground) }; var li2 = document.createElement("li"); li2.style.cssText = "text-align: center;line-height: 40px;float:left;width:50%;font-size:12px;color:red;"; li2.innerHTML = "确定"; if (okOptopn && okOptopn.text) { li2.innerHTML = okOptopn.text } li2.onclick = function () { if (okOptopn.fn) { okOptopn.fn() } if (callback) { callback() } document.body.removeChild(divBackground) }; ul.appendChild(li1); ul.appendChild(li2); divContent.appendChild(span); divContent.appendChild(ul); divBackground.appendChild(divContent); document.body.appendChild(divBackground) }; String.prototype.format = function (args) { var result = this; if (arguments.length > 0) { if (arguments.length == 1 && typeof (args) == "object") { for (var key in args) { if (args[key] != undefined) { var reg = new RegExp("({)" + key + "(})", "g"); result = result.replace(reg, args[key]) } } } else { for (var i = 0; i < arguments.length; i++) { if (arguments[i] != undefined) { var reg = new RegExp("({)" + i + "(})", "g"); result = result.replace(reg, arguments[i]) } } } } return result } }());